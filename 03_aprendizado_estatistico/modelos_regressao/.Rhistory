# download the data
x = c(6.1, 3.7, 6.5, 5.8, 5.1, 4.6, 9.1, 6.5, 7.5, 5.5)
y = c(23.7, 17.8, 22.4, 18.9, 17.4, 19.2, 29.2, 18.2, 24.7, 21.3)
cbind(x,y)
# ajustando modelo 1
ajuste=lm(x~y)
ajuste
# download the data
x = c(6.
1, 3.7, 6.5, 5.8, 5.1, 4.6, 9.1, 6.5, 7.5, 5.5)
# download the data
x = c(6.1, 3.7, 6.5, 5.8, 5.1, 4.6, 9.1, 6.5, 7.5, 5.5)
y = c(23.7, 17.8, 22.4, 18.9, 17.4, 19.2, 29.2, 18.2, 24.7, 21.3)
cbind(x,y)
plot(x,y)
# ajustando modelo 1
ajuste=lm(x~y)
ajuste
x = c(6.1, 3.7, 6.5, 5.8, 5.1, 4.6, 9.1, 6.5, 7.5, 5.5)
y = c(23.7, 17.8, 22.4, 18.9, 17.4, 19.2, 29.2, 18.2, 24.7, 21.3)
cbind(x,y)
plot(x,y)
cor(x,y)
ajuste=lm(x~y)
ajuste
# ajustando modelo 2
m = lm(y~x)
s = summary(lm(y~x))
s
lm(y~x)
s = summary(lm(y~x))
s
# anova
anova(m)
# generating the data
n<-50
x<-runif(n,0,1)
eta<-2 + 3*x
mu<-exp(eta)
var<- 2
alpha <- mu^2/var
sigma <- var/mu
y1 <- rgamma(n, shape = alpha, scale = sigma)
df1<-data.frame(y1,x)
df1
# ajuste do modelo
mod1<-glm(y1~x,data = df1,Gamma(link = "log"))
summary(mod1)
# generating the data
n<-50
x<-runif(n,0,1)
# generating the data
n<-50
x<-runif(n,0,1)
eta<-2 + 3*x
mu<-exp(eta)
var<- 2
alpha <- mu^2/var
sigma <- var/mu
# generating the data
n<-50
x<-runif(n,0,1)
eta<-2 + 3*x
mu<-exp(eta)
var<- 2
alpha <- mu^2/var
sigma <- var/mu
y1 <- rgamma(n, shape = alpha, scale = sigma)
df1<-data.frame(y1,x)
df1
plot(y1)
hist(y1)
# ajuste do modelo
mod1<-glm(y1~x,data = df1,Gamma(link = "log"))
summary(mod1)
# Carregar pacotes necessários
library(ggplot2)
library(dplyr)
library(car)
library(MASS)
# Carregar pacotes necessários
library(ggplot2)
library(dplyr)
library(car)
library(MASS)
# Carregar conjunto de dados mtcars
data(mtcars)
# Exibir primeiras linhas do dataset
head(mtcars)
# Resumo estatístico das variáveis
summary(mtcars)
# Matriz de correlação para verificar multicolinearidade
cor(mtcars)
# Visualização da relação entre as variáveis
pairs(mtcars, main = "Matriz de Dispersão")
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + hp + wt, data = mtcars)
# Resumo do modelo ajustado
summary(modelo)
# 1. Análise dos resíduos
par(mfrow = c(2, 2)) # Configurar área de plotagem
plot(modelo) # Gráficos diagnósticos
# 2. Teste de normalidade dos resíduos
shapiro.test(modelo$residuals)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
bptest(modelo)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
bptest(modelo)
# 4. Teste de multicolinearidade (VIF - Variance Inflation Factor)
vif(modelo)
# Ajuste do modelo com seleção de variáveis (usando stepwise AIC)
modelo_step <- stepAIC(modelo, direction = "both")
# Resumo do modelo otimizado
summary(modelo_step)
# Exibir os coeficientes finais do modelo ajustado
coef(modelo_step)
# Carregar pacotes necessários
library(ggplot2)
library(dplyr)
library(car)
library(MASS)
library(lmtest)
# Carregar pacotes necessários
library(ggplot2)
library(dplyr)
library(car)
library(MASS)
# Carregar pacotes necessários
library(ggplot2)
library(dplyr)
library(car)
library(MASS)
# Carregar conjunto de dados mtcars
data(mtcars)
# Exibir primeiras linhas do dataset
head(mtcars)
# Resumo estatístico das variáveis
summary(mtcars)
# Matriz de correlação para verificar multicolinearidade
cor(mtcars)
# Visualização da relação entre as variáveis
pairs(mtcars, main = "Matriz de Dispersão")
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + hp + wt, data = mtcars)
# Resumo do modelo ajustado
summary(modelo)
# 1. Análise dos resíduos
par(mfrow = c(2, 2)) # Configurar área de plotagem
plot(modelo) # Gráficos diagnósticos
# 2. Teste de normalidade dos resíduos
shapiro.test(modelo$residuals)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
bptest(modelo)
# 4. Teste de multicolinearidade (VIF - Variance Inflation Factor)
vif(modelo)
# 2. Teste de normalidade dos resíduos
shapiro.test(modelo$residuals)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
bptest(modelo)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
bptest(modelo)
# Ajuste do modelo com seleção de variáveis (usando stepwise AIC)
modelo_step <- stepAIC(modelo, direction = "both")
# Resumo do modelo otimizado
summary(modelo_step)
# Carregar pacotes necessários
library(ggplot2)
library(dplyr)
library(car)
library(MASS)
# Carregar conjunto de dados mtcars
data(mtcars)
# Exibir primeiras linhas do dataset
head(mtcars)
# Resumo estatístico das variáveis
summary(mtcars)
# Matriz de correlação para verificar multicolinearidade
cor(mtcars)
# Matriz de correlação para verificar multicolinearidade
cor(mtcars)
# Visualização da relação entre as variáveis
pairs(mtcars, main = "Matriz de Dispersão")
# Visualização da relação entre as variáveis
pairs(mtcars, main = "Matriz de Dispersão")
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + hp + wt, data = mtcars)
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + hp + wt, data = mtcars)
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + hp + wt, data = mtcars)
modelo
# Resumo do modelo ajustado
summary(modelo)
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + hp + wt, data = mtcars)
# Resumo do modelo ajustado
summary(modelo)
hp +
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + hp + wt, data = mtcars)
# Resumo do modelo ajustado
summary(modelo)
# Ajustar um modelo de regressão múltipla
modelo <- lm(mpg ~ cyl + disp + wt, data = mtcars)
# Resumo do modelo ajustado
summary(modelo)
# 3. Teste de homocedasticidade (Teste de Breusch-Pagan)
library(lmtest)
bptest(modelo)
# h0: Os resíduos apresentam homocedasticidade (variância constante).
# h1: Os resíduos apresentam heterocedasticidade (variância não constante)
# 2. Teste de normalidade dos resíduos
shapiro.test(modelo$residuals)
# h0: Os resíduos seguem uma distribuição normal.
# h1: Os resíduos não seguem uma distribuição normal.
# 4. Teste de multicolinearidade (VIF - Variance Inflation Factor)
vif(modelo)
#VIF < 1 → Sem correlação entre a variável e as outras.
#1 ≤ VIF < 5 → Correlação moderada, geralmente aceitável.
#VIF ≥ 5 → Forte multicolinearidade, pode ser problemático.
#VIF > 10 → Multicolinearidade severa, pode causar instabilidade nos coeficientes do modelo.
